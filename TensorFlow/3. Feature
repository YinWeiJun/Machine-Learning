Session 会话控制
===============
    简单运用 
    欢迎回来！这一次我们会讲到 Tensorflow 中的 Session, Session 是 Tensorflow 为了控制,和输出文件的执行的语句. 
    运行 session.run() 可以获得你要得知的运算结果, 或者是你所要运算的部分.

    首先，我们这次需要加载 Tensorflow ，然后建立两个 matrix ,输出两个 matrix 矩阵相乘的结果。

        import tensorflow as tf

        # create two matrixes

        matrix1 = tf.constant([[3,3]])
        matrix2 = tf.constant([[2],
                               [2]])
        product = tf.matmul(matrix1,matrix2)
        
    因为 product 不是直接计算的步骤, 所以我们会要使用 Session 来激活 product 并得到计算结果. 有两种形式使用会话控制 Session 。

        # method 1
        ----------
        sess = tf.Session()
        result = sess.run(product)
        print(result)
        sess.close()
        # [[12]]

        # method 2
        ----------
        with tf.Session() as sess:
            result2 = sess.run(product)
            print(result2)
        # [[12]]
        
Variable 变量
=============
    简单运用 
    这节课我们学习如何在 Tensorflow 中使用 Variable .

    在 Tensorflow 中，定义了某字符串是变量，它才是变量，这一点是与 Python 所不同的。

    定义语法： state = tf.Variable()

        import tensorflow as tf

        state = tf.Variable(0, name='counter')

    # 定义常量 one
    --------------
        one = tf.constant(1)

    # 定义加法步骤 (注: 此步并没有直接计算)
    -------------
        new_value = tf.add(state, one)

    # 将 State 更新成 new_value
    ---------------------------
        update = tf.assign(state, new_value)
        
    如果你在 Tensorflow 中设定了变量，那么初始化变量是最重要的！！所以定义了变量以后, 一定要定义 
                                        ---------------------
        init = tf.initialize_all_variables() .

    到这里变量还是没有被激活，需要再在 sess 里, 
        sess.run(init) , 
    激活 init 这一步.

    # 如果定义 Variable, 就一定要 initialize
        # init = tf.initialize_all_variables() # tf 马上就要废弃这种写法
        init = tf.global_variables_initializer()  # 替换成这样就好
 
    # 使用 Session
        with tf.Session() as sess:
            sess.run(init)
            for _ in range(3):
                sess.run(update)
                print(sess.run(state))
    注意：直接 print(state) 不起作用！！
    ----------------------------------
    一定要把 sess 的指针指向 state 再进行 print 才能得到想要的结果！
    ------------------------------------------------------------

Placeholder 传入值
==================
    简单运用 
    这一次我们会讲到 Tensorflow 中的 placeholder , placeholder 是 Tensorflow 中的占位符，暂时储存变量.

    Tensorflow 如果想要从外部传入data, 那就需要用到 tf.placeholder(), 然后以这种形式传输数据 
            
            sess.run(***, feed_dict={input: **}).

    示例：

            import tensorflow as tf

        #在 Tensorflow 中需要定义 placeholder 的 type ，一般为 float32 形式
            
            input1 = tf.placeholder(tf.float32)
            input2 = tf.placeholder(tf.float32)

        # mul = multiply 是将input1和input2 做乘法运算，并输出为 output 
        
            ouput = tf.multiply(input1, input2)
        
        接下来, 传值的工作交给了 sess.run() , 需要传入的值放在了feed_dict={} 并一一对应每一个 input. 
        placeholder 与 feed_dict={} 是绑定在一起出现的。

            with tf.Session() as sess:
                print(sess.run(ouput, feed_dict={input1: [7.], input2: [2.]}))
                     ---------------------------------------------------------
        # [ 14.]
        


